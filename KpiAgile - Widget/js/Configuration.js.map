{"version":3,"sources":["../src/Configuration.js"],"names":[],"mappings":"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","file":"Configuration.js","sourcesContent":["var queryDropdown = (\"#query-path-dropdown\");\r\nvar optionsMetric = (\"#optionsMetric\");\r\nvar settings = null;\r\n\r\nVSS.init({\r\n    explicitNotifyLoaded: true,\r\n    usePlatformStyles: true\r\n});\r\n\r\nVSS.require([\"TFS/Dashboards/WidgetHelpers\", \"TFS/WorkItemTracking/RestClient\", \"TFS/WorkItemTracking/Contracts\"],\r\n    function(WidgetHelpers, TFS_Wit_WebApi, TFS_contracts) {\r\n        VSS.register(\"LeadTimeMetric.Configuration\", function() {\r\n            return {\r\n                load: function(widgetSettings, widgetConfigurationContext) {\r\n                    settings = JSON.parse(widgetSettings.customSettings.data);\r\n                    if (settings && settings.queryPath && settings.metric) {\r\n                        $(queryDropdown).val(settings.queryPath);\r\n                        $(optionsMetric).val(settings.metric);\r\n                    }\r\n\r\n                    TFS_Wit_WebApi.getClient().getQuery(VSS.getWebContext().project.id, \"Shared Queries\", TFS_contracts.QueryExpand.None, 2).then(getListQueries);\r\n\r\n                    //Enable Live Preview\r\n                    $(queryDropdown).on(\"change\", function() {\r\n                        var customSettings = {\r\n                            data: JSON.stringify({\r\n                                queryPath: $(queryDropdown).val()\r\n\r\n                            })\r\n                        };\r\n                        var eventName = WidgetHelpers.WidgetEvent.ConfigurationChange;\r\n                        var eventArgs = WidgetHelpers.WidgetEvent.Args(customSettings);\r\n                        widgetConfigurationContext.notify(eventName, eventArgs);\r\n                    });\r\n                    $(optionsMetric).on(\"change\", function() {\r\n                        var customSettings = {\r\n                            data: JSON.stringify({\r\n                                metric: $(optionsMetric).val()\r\n                            })\r\n                        };\r\n                        var eventName = WidgetHelpers.WidgetEvent.ConfigurationChange;\r\n                        var eventArgs = WidgetHelpers.WidgetEvent.Args(customSettings);\r\n                        widgetConfigurationContext.notify(eventName, eventArgs);\r\n                    });\r\n                    //^^^^^^\r\n                    return WidgetHelpers.WidgetStatusHelper.Success();\r\n                },\r\n                // function(error) {\r\n                //     return WidgetHelpers.WidgetStatusHelper.Failure(error.message);\r\n                //},\r\n                onSave: function() {\r\n                    var customSettings = {\r\n                        data: JSON.stringify({\r\n                            queryPath: $(queryDropdown).val(),\r\n                            metric: $(optionsMetric).val()\r\n                        })\r\n                    };\r\n                    return WidgetHelpers.WidgetConfigurationSave.Valid(customSettings);\r\n                }\r\n            }\r\n        });\r\n        VSS.notifyLoadSucceeded();\r\n    }\r\n);\r\n\r\nfunction getListQueries(queries) {\r\n    //Get query result\r\n    queries.children.forEach(rootFolderQuery => {\r\n        if (rootFolderQuery.hasChildren == undefined) {\r\n            setDropDownList(rootFolderQuery);\r\n        }\r\n        if (rootFolderQuery.hasChildren == true) {\r\n            rootFolderQuery.children.forEach(subFolderQuery => {\r\n                if (subFolderQuery.hasChildren == undefined) {\r\n                    setDropDownList(subFolderQuery);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction setDropDownList(rootFolderQuery) {\r\n    //Set results to DropDownList\r\n    $(\"<option>\" + rootFolderQuery.path + \"</option>\").attr(\"value\", rootFolderQuery.path).appendTo($(queryDropdown));\r\n    $(queryDropdown).val(settings.queryPath);\r\n}"]}